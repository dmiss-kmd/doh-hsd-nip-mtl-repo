config {
    type: "incremental", //Try changing to "table" instead.
    name: "tbl_chd_inv_raw",
    schema: "nip_mtl_staging", // Specify the dataset
    dependencies: ['tbl_vaxtype','tbl_chd_inv_staging'],
    assertions:{
        nonNull: ["warehousecode", "vaxtype", "lotno"],
        rowConditions: ["vaxtype IN (SELECT vaxtype FROM nip_mtl_staging.tbl_vaxtype)"]
    },
    bigquery: {
      partitionBy: "extract_date",
      clusterBy: ["warehousecode", "vaxtype", "lotno"]
    },
   
    columns: {
        extract_date: tbldef.extract_date,
        region_psgc: tbldef.region_psgc,
        region: tbldef.region,
        provhuc_psgc:  tbldef.provhuc_psgc,
        prov_huc:  tbldef.prov_huc,
        warehousecode: tbldef.warehousecode,
        warehousename: tbldef.warehousename,
        vaxtype: tbldef.vaxtype,
        productcode: tbldef.productcode,
        productdesc: tbldef.productdesc,
        lotno: tbldef.lotno,
        expiry_date: tbldef.expiry_date,
        balanceqty: tbldef.balanceqty,
        qtyindoses:  tbldef.available_doses, 
        rowhash: tbldef.rowhash
    }
}


WITH 
chd_raw as
(
  SELECT
    SAFE_CAST(PARSE_DATE("%Y-%b-%d",extract_date) AS date) AS extract_date,
    region_psgc,
    region,
    provhuc_psgc,
    prov_huc,
    warehousecode,
    warehousename,
    vaxtype,
    productcode,
    productdesc,
    lotno,
    SAFE_CAST(PARSE_DATE("%Y-%b-%d",expiry_date) AS date) AS expiry_date,
    balanceqty,
    qtyindoses,
    sha1(to_json_string( STRUCT(
      extract_date,
      region_psgc,
      region,
      provhuc_psgc,
      prov_huc,
      warehousecode,
      warehousename,
      vaxtype,
      productcode,
      productdesc,
      lotno,
      expiry_date,
      balanceqty,
      qtyindoses)
    ) ) as rowhash
  FROM
    ${ref("tbl_chd_inv_staging")}
)

SELECT
  *
FROM chd_raw
WHERE rowhash NOT IN (SELECT rowhash FROM  nip_mtl_staging.tbl_chd_inv_raw)
