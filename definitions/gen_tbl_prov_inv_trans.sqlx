config {
    type: "incremental", //Try changing to "table" instead.
    name: "tbl_prov_inv_trans",
    schema: "nip_mtl_staging", // Specify the dataset
    dependencies: ["nip_mtl_staging_tbl_prov_inv_raw_assertions_rowConditions"],
    assertions:{
        nonNull: ["provhuc_psgc", "vaxtype", "extract_date"],
        rowConditions: ["vaxtype NOT IN (SELECT vaxtype FROM nip_mtl_staging.tbl_vaxtype)"
        ,"rowhash not in (SELECT rowhash from nip_mtl_staging.tbl_prov_inv_trans)"]
    },
    bigquery: {
      partitionBy: "extract_date",
      clusterBy: ["warehousecode", "vaxtype", "lotno"]
    },
   
    columns: {
        extract_date: tbldef.extract_date,
        region_psgc: tbldef.region_psgc,
        region: tbldef.region,
        provhuc_psgc:  tbldef.provhuc_psgc,
        prov_huc:  tbldef.prov_huc,
        warehousecode: tbldef.warehousecode,
        warehousename: tbldef.warehousename,
        vaxtype: tbldef.vaxtype,
        productcode: tbldef.productcode,
        productdesc: tbldef.productdesc,
        lotno: tbldef.lotno,
        expiry_date: tbldef.expiry_date,
        balanceqty: tbldef.balanceqty,
        available_doses:  tbldef.available_doses, 
        days_to_expire: tbldef.days_to_expire,
        rowhash: tbldef.rowhash
    }
}

WITH 
prov_trans as
(
  SELECT
    *,
    date_diff(expiry_date, extract_date,  DAY) days_to_expire,
    sha1(to_json_string( STRUCT(
      extract_date,
      region_psgc,
      region,
      provhuc_psgc,
      prov_huc,
      warehousecode,
      warehousename,
      vaxtype,
      productcode,
      productdesc,
      lotno,
      expiry_date,
      balanceqty,
      available_doses)
    ) ) as rowhash
  FROM 
  (
    SELECT
      extract_date,
      region_psgc,
      UPPER(TRIM(region)) AS region,
      provhuc_psgc,
      UPPER(TRIM(prov_huc)) AS prov_huc,
      warehousecode,
      UPPER(TRIM(warehousename)) AS warehousename,
      vaxtype,
      productcode,
      productdesc,
      lotno,
      expiry_date,
      SUM(balanceqty) as balanceqty,
      SUM(qtyindoses) AS available_doses,
      
    FROM
      ${ref("nip_mtl_staging_tbl_prov_inv_raw_assertions_rowConditions")}
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12
  )
  
)

SELECT
  *
FROM prov_trans
